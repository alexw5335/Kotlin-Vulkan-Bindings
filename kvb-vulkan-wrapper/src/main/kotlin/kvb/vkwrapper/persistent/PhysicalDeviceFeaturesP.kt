package kvb.vkwrapper.persistent

import kvb.vulkan.struct.PhysicalDeviceFeatures

/**
 * Persistent implementation of [VkPhysicalDeviceFeatures][PhysicalDeviceFeatures].
 */
class PhysicalDeviceFeaturesP(
	val robustBufferAccess: Int,
	val fullDrawIndexUint32: Int,
	val imageCubeArray: Int,
	val independentBlend: Int,
	val geometryShader: Int,
	val tessellationShader: Int,
	val sampleRateShading: Int,
	val dualSrcBlend: Int,
	val logicOp: Int,
	val multiDrawIndirect: Int,
	val drawIndirectFirstInstance: Int,
	val depthClamp: Int,
	val depthBiasClamp: Int,
	val fillModeNonSolid: Int,
	val depthBounds: Int,
	val wideLines: Int,
	val largePoints: Int,
	val alphaToOne: Int,
	val multiViewport: Int,
	val samplerAnisotropy: Int,
	val textureCompressionETC2: Int,
	val textureCompressionASTC_LDR: Int,
	val textureCompressionBC: Int,
	val occlusionQueryPrecise: Int,
	val pipelineStatisticsQuery: Int,
	val vertexPipelineStoresAndAtomics: Int,
	val fragmentStoresAndAtomics: Int,
	val shaderTessellationAndGeometryPointSize: Int,
	val shaderImageGatherExtended: Int,
	val shaderStorageImageExtendedFormats: Int,
	val shaderStorageImageMultisample: Int,
	val shaderStorageImageReadWithoutFormat: Int,
	val shaderStorageImageWriteWithoutFormat: Int,
	val shaderUniformBufferArrayDynamicIndexing: Int,
	val shaderSampledImageArrayDynamicIndexing: Int,
	val shaderStorageBufferArrayDynamicIndexing: Int,
	val shaderStorageImageArrayDynamicIndexing: Int,
	val shaderClipDistance: Int,
	val shaderCullDistance: Int,
	val shaderFloat64: Int,
	val shaderInt64: Int,
	val shaderInt16: Int,
	val shaderResourceResidency: Int,
	val shaderResourceMinLod: Int,
	val sparseBinding: Int,
	val sparseResidencyBuffer: Int,
	val sparseResidencyImage2D: Int,
	val sparseResidencyImage3D: Int,
	val sparseResidency2Samples: Int,
	val sparseResidency4Samples: Int,
	val sparseResidency8Samples: Int,
	val sparseResidency16Samples: Int,
	val sparseResidencyAliased: Int,
	val variableMultisampleRate: Int,
	val inheritedQueries: Int,
) {


	constructor(struct: PhysicalDeviceFeatures) : this(
		struct.robustBufferAccess,
		struct.fullDrawIndexUint32,
		struct.imageCubeArray,
		struct.independentBlend,
		struct.geometryShader,
		struct.tessellationShader,
		struct.sampleRateShading,
		struct.dualSrcBlend,
		struct.logicOp,
		struct.multiDrawIndirect,
		struct.drawIndirectFirstInstance,
		struct.depthClamp,
		struct.depthBiasClamp,
		struct.fillModeNonSolid,
		struct.depthBounds,
		struct.wideLines,
		struct.largePoints,
		struct.alphaToOne,
		struct.multiViewport,
		struct.samplerAnisotropy,
		struct.textureCompressionETC2,
		struct.textureCompressionASTC_LDR,
		struct.textureCompressionBC,
		struct.occlusionQueryPrecise,
		struct.pipelineStatisticsQuery,
		struct.vertexPipelineStoresAndAtomics,
		struct.fragmentStoresAndAtomics,
		struct.shaderTessellationAndGeometryPointSize,
		struct.shaderImageGatherExtended,
		struct.shaderStorageImageExtendedFormats,
		struct.shaderStorageImageMultisample,
		struct.shaderStorageImageReadWithoutFormat,
		struct.shaderStorageImageWriteWithoutFormat,
		struct.shaderUniformBufferArrayDynamicIndexing,
		struct.shaderSampledImageArrayDynamicIndexing,
		struct.shaderStorageBufferArrayDynamicIndexing,
		struct.shaderStorageImageArrayDynamicIndexing,
		struct.shaderClipDistance,
		struct.shaderCullDistance,
		struct.shaderFloat64,
		struct.shaderInt64,
		struct.shaderInt16,
		struct.shaderResourceResidency,
		struct.shaderResourceMinLod,
		struct.sparseBinding,
		struct.sparseResidencyBuffer,
		struct.sparseResidencyImage2D,
		struct.sparseResidencyImage3D,
		struct.sparseResidency2Samples,
		struct.sparseResidency4Samples,
		struct.sparseResidency8Samples,
		struct.sparseResidency16Samples,
		struct.sparseResidencyAliased,
		struct.variableMultisampleRate,
		struct.inheritedQueries,
	)


}